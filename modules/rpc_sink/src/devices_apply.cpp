
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.7.0.0
//   File : devices_apply.cpp
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#include "devices_apply.h"
#include "devices_reflection.h"

namespace microsoft
{
namespace azure
{
namespace devices
{
    
    //
    // Overloads of Apply function with common transforms for Handle.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Handle>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Handle& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Handle,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for Ptr.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::Ptr>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::Ptr& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::Ptr,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for CreateTransportArgs.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for ClientResult.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientResult>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientResult& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientResult,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for ClientConfig.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::ClientConfig>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::ClientConfig& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::ClientConfig,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for CreateWithTransportArgs.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::CreateWithTransportArgs>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::CreateWithTransportArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::CreateWithTransportArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for SendEventArgs.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SendEventArgs>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SendEventArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SendEventArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    //
    // Overloads of Apply function with common transforms for SetMessageCallbackArgs.
    // These overloads will be selected using argument dependent lookup
    // before ::bond::Apply function templates.
    //
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::To< ::microsoft::azure::devices::SetMessageCallbackArgs>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::microsoft::azure::devices::SetMessageCallbackArgs& value)
    {
        return ::bond::Apply<>(transform, value);
    }

    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::microsoft::azure::devices::SetMessageCallbackArgs,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value)
    {
        return ::bond::Apply<>(transform, value);
    }
    
} // namespace devices
} // namespace azure
} // namespace microsoft
