
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.7.0.0
//   File : devices_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "devices_types.h"
#include <bond/core/reflection.h>

namespace microsoft
{
namespace azure
{
namespace devices
{
    //
    // Handle
    //
    struct Handle::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_value_metadata;

        public: struct var
        {
            // value
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                Handle,
                uint64_t,
                &Handle::value,
                &s_value_metadata
            > value;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::value>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Handle", "microsoft.azure.devices.Handle",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Ptr
    //
    struct Ptr::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_value_metadata;

        public: struct var
        {
            // value
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                Ptr,
                uint64_t,
                &Ptr::value,
                &s_value_metadata
            > value;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::value>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Ptr", "microsoft.azure.devices.Ptr",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // CreateTransportArgs
    //
    struct CreateTransportArgs::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_provider_metadata;
        private: static const ::bond::Metadata s_iotHubName_metadata;
        private: static const ::bond::Metadata s_iotHubSuffix_metadata;

        public: struct var
        {
            // provider
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                CreateTransportArgs,
                ::microsoft::azure::devices::TransportProvider,
                &CreateTransportArgs::provider,
                &s_provider_metadata
            > provider;
        
            // iotHubName
            typedef ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                CreateTransportArgs,
                std::string,
                &CreateTransportArgs::iotHubName,
                &s_iotHubName_metadata
            > iotHubName;
        
            // iotHubSuffix
            typedef ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::optional_field_modifier,
                CreateTransportArgs,
                std::string,
                &CreateTransportArgs::iotHubSuffix,
                &s_iotHubSuffix_metadata
            > iotHubSuffix;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::iotHubSuffix>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::iotHubName>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::provider>::type fields3;

        public: typedef fields3::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("CreateTransportArgs", "microsoft.azure.devices.CreateTransportArgs",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // ClientResult
    //
    struct ClientResult::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_value_metadata;

        public: struct var
        {
            // value
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                ClientResult,
                ::microsoft::azure::devices::ClientResultValue,
                &ClientResult::value,
                &s_value_metadata
            > value;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::value>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("ClientResult", "microsoft.azure.devices.ClientResult",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // ClientConfig
    //
    struct ClientConfig::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_transport_metadata;
        private: static const ::bond::Metadata s_deviceId_metadata;
        private: static const ::bond::Metadata s_deviceKey_metadata;
        private: static const ::bond::Metadata s_deviceSasToken_metadata;
        private: static const ::bond::Metadata s_iotHubName_metadata;
        private: static const ::bond::Metadata s_iotHubSuffix_metadata;
        private: static const ::bond::Metadata s_protocolGatewayHostName_metadata;

        public: struct var
        {
            // transport
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                ::microsoft::azure::devices::TransportProvider,
                &ClientConfig::transport,
                &s_transport_metadata
            > transport;
        
            // deviceId
            typedef ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::deviceId,
                &s_deviceId_metadata
            > deviceId;
        
            // deviceKey
            typedef ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::deviceKey,
                &s_deviceKey_metadata
            > deviceKey;
        
            // deviceSasToken
            typedef ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::deviceSasToken,
                &s_deviceSasToken_metadata
            > deviceSasToken;
        
            // iotHubName
            typedef ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::iotHubName,
                &s_iotHubName_metadata
            > iotHubName;
        
            // iotHubSuffix
            typedef ::bond::reflection::FieldTemplate<
                5,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::iotHubSuffix,
                &s_iotHubSuffix_metadata
            > iotHubSuffix;
        
            // protocolGatewayHostName
            typedef ::bond::reflection::FieldTemplate<
                6,
                ::bond::reflection::optional_field_modifier,
                ClientConfig,
                std::string,
                &ClientConfig::protocolGatewayHostName,
                &s_protocolGatewayHostName_metadata
            > protocolGatewayHostName;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::protocolGatewayHostName>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::iotHubSuffix>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::iotHubName>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::deviceSasToken>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::deviceKey>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::deviceId>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::transport>::type fields7;

        public: typedef fields7::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("ClientConfig", "microsoft.azure.devices.ClientConfig",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // CreateWithTransportArgs
    //
    struct CreateWithTransportArgs::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_transport_metadata;
        private: static const ::bond::Metadata s_config_metadata;

        public: struct var
        {
            // transport
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                CreateWithTransportArgs,
                ::microsoft::azure::devices::Handle,
                &CreateWithTransportArgs::transport,
                &s_transport_metadata
            > transport;
        
            // config
            typedef ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                CreateWithTransportArgs,
                ::microsoft::azure::devices::ClientConfig,
                &CreateWithTransportArgs::config,
                &s_config_metadata
            > config;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::config>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::transport>::type fields2;

        public: typedef fields2::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("CreateWithTransportArgs", "microsoft.azure.devices.CreateWithTransportArgs",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // SendEventArgs
    //
    struct SendEventArgs::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_client_metadata;
        private: static const ::bond::Metadata s_event_metadata;
        private: static const ::bond::Metadata s_callback_metadata;
        private: static const ::bond::Metadata s_context_metadata;

        public: struct var
        {
            // client
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                SendEventArgs,
                ::microsoft::azure::devices::Handle,
                &SendEventArgs::client,
                &s_client_metadata
            > client;
        
            // event
            typedef ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                SendEventArgs,
                ::microsoft::azure::devices::Handle,
                &SendEventArgs::event,
                &s_event_metadata
            > event;
        
            // callback
            typedef ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::optional_field_modifier,
                SendEventArgs,
                ::microsoft::azure::devices::Ptr,
                &SendEventArgs::callback,
                &s_callback_metadata
            > callback;
        
            // context
            typedef ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::optional_field_modifier,
                SendEventArgs,
                ::microsoft::azure::devices::Ptr,
                &SendEventArgs::context,
                &s_context_metadata
            > context;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::context>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::callback>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::event>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::client>::type fields4;

        public: typedef fields4::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("SendEventArgs", "microsoft.azure.devices.SendEventArgs",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // SetMessageCallbackArgs
    //
    struct SetMessageCallbackArgs::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_client_metadata;
        private: static const ::bond::Metadata s_callback_metadata;
        private: static const ::bond::Metadata s_context_metadata;

        public: struct var
        {
            // client
            typedef ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                SetMessageCallbackArgs,
                ::microsoft::azure::devices::Handle,
                &SetMessageCallbackArgs::client,
                &s_client_metadata
            > client;
        
            // callback
            typedef ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                SetMessageCallbackArgs,
                ::microsoft::azure::devices::Ptr,
                &SetMessageCallbackArgs::callback,
                &s_callback_metadata
            > callback;
        
            // context
            typedef ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::optional_field_modifier,
                SetMessageCallbackArgs,
                ::microsoft::azure::devices::Ptr,
                &SetMessageCallbackArgs::context,
                &s_context_metadata
            > context;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::context>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::callback>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::client>::type fields3;

        public: typedef fields3::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("SetMessageCallbackArgs", "microsoft.azure.devices.SetMessageCallbackArgs",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace devices
} // namespace azure
} // namespace microsoft
